<!DOCTYPE html>
var buildCandidateTableHTML=require('../assets/javascripts/common/buildCandidateTableHTML.js')
html lang="en"
  head
    meta charset="utf-8"
    title - ${data.model.metadata.title}
    meta name="viewport" content="width=device-width, initial-scale=1"
    link rel="stylesheet" href="${data.path_to_asset('scss', 'stylesheets/dashboard.css')}"
    link rel="shortcut icon" type="image/x-icon" href="${data.path_to_asset('digest', 'images/favicon.ico')}"
    $!{data.helpers.partial('_social-meta')}
  body.region
    $!{data.helpers.partial('dashboard/_header')}
    $!{data.helpers.partial('dashboard/_nav')}

    h1 - ${data.model.name}

    section#president
      h2.section-header - President
      .section-inner
        aside
          var nElectoralVotes=(data.model.races.president.districts ? 2 : data.model.races.president.race.nElectoralVotes)
          p - Winner gets <strong>${nElectoralVotes}</strong> electoral votes.

          <div class="candidate-table">$!{buildCandidateTableHTML(data.model.races.president.race)}</div>

          if(data.model.races.president.districts)
            p - ${data.model.name} also assigns an electoral vote to the winner in each district:
            table.split-vote-districts
              thead
                tr
                  th.district - District
                  th.winner - Winner
                  th.votes - Electoral<br>Votes
              tbody
                tr data-race-id="${data.model.races.president.race.id}" class="${data.model.races.president.race.className}"
                  td.district - At Large
                  td.winner - ${{'dem-win':'Clinton','gop-win':'Trump'}[data.model.races.president.race.className] || ''}
                  td.votes - 2
                for(race in data.model.races.president.districts)
                  tr data-race-id="${race.id}" class="${race.className}"
                    td.district - District ${race.id.slice(2)}
                    td.winner - ${{'dem-win':'Clinton','gop-win':'Trump'}[race.className] || ''}
                    td.votes - 1

          .refresh - <button class="refresh"></button><span class="countdown"></span>
          p.to-national-map - <a href="${data.path_to('president')}">National President Map »</a>
        .section-main
          $!{data.helpers.partial('dashboard/_legend', { entrySet: 'president' })}
          .geo-map.president-map - $!{data.helpers.geoSvg(data.model.id)}

    if(data.model.races.senate.seats.length)
      section#senate
        h2.section-header - Senate
        .section-inner
          aside
            for(seat in data.model.races.senate.seats)
              p - ${seat.candidates[0].fullName} (${seat.candidates[0].partyId === 'ind' ? 'Independent, caucuses as a ' : ''}<strong class="${seat.className}">${{gop: 'Republican', dem: 'Democrat'}[seat.winner]}</strong>) has a term ending ${{3: 'this year:', 1: 'in 2018.', 2: 'in 2020.'}[seat.seatClass]}
            if(data.model.races.senate.race)
              <div class="candidate-table">$!{buildCandidateTableHTML(data.model.races.senate.race)}</div>
              .refresh - <button class="refresh"></button><span class="countdown"></span>
            p.to-national-map - <a href="${data.path_to('senate')}">National Senate Map »</a>
          if(data.model.races.senate.race)
            .section-main
              $!{data.helpers.partial('dashboard/_legend', { entrySet: 'senate' })}
              .geo-map.senate-map - $!{data.helpers.geoSvg(data.model.id)}

    if(data.model.races.house.length)
      section#house
        h2.section-header - House
        .section-inner
          aside
            p - ${data.model.name} has <strong>${data.model.races.house.length}</strong> ${data.model.races.house.length == 1 ? 'House seat' : 'House seats'}. ${data.model.races.house.length == 1 ? 'It is' : (data.model.races.house.length == 2 ? 'Both are' : 'All are')} up for re-election.
            $!{data.helpers.partial('dashboard/_legend', { entrySet: 'house' })}
            .house-map - $!{data.helpers.districtSvg(data.model.id)}
            .refresh - <button class="refresh"></button><span class="countdown"></span>
            p.to-national-map - <a href="${data.path_to('house')}">National House Map »</a>
          .section-main - $!{data.helpers.partial('region/_house-races')}

    if(data.model.races.ballot.length)
      section#ballot
        h2.section-header - Ballot Initiatives
        .section-inner
          aside
            p - ${data.model.name} is voting on <strong>${data.model.races.ballot.length}</strong> statewide ballot ${data.model.races.ballot.length == 1 ? 'initiative' : 'initiatives'}.
            p.percent-reporting - ${Math.round(100 * Math.max.apply(null, data.model.races.ballot.map(function(r) { return r.fractionReporting; })))}% of votes counted
            .refresh - <button class="refresh"></button><span class="countdown"></span>
          .section-main - $!{data.helpers.partial('region/_ballot-races')}

      $!{data.helpers.partial('_sources')}
      .comments
        .fb-comments data-width="100%"

    #tooltip
    $!{data.helpers.partial('_footer')}

    script src="${data.path_to_asset('javascript', 'javascripts/region.js')}" data-url="${data.path_to('state/:id.json', data.model.id)}" data-json="${JSON.stringify(data.model.races)}"
    script src="${data.path_to_asset('digest', 'javascripts/social.js')}"
    script src="${data.path_to_asset('digest', 'javascripts/stats.js')}"
